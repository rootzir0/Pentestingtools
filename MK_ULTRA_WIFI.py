#MK_ULTRA_WIFI
import subprocess
import re
import sys

print(r"""   
             $$\      $$\ $$\   $$\       $$\   $$\ $$\    $$$$$$$$\ $$$$$$$\   $$$$$$\  
             $$$\    $$$ |$$ | $$  |      $$ |  $$ |$$ |   \__$$  __|$$  __$$\ $$  __$$\ 
             $$$$\  $$$$ |$$ |$$  /       $$ |  $$ |$$ |      $$ |   $$ |  $$ |$$ /  $$ |
             $$\$$\$$ $$ |$$$$$  /$$$$$$\ $$ |  $$ |$$ |      $$ |   $$$$$$$  |$$$$$$$$ |
             $$ \$$$  $$ |$$  $$< \______|$$ |  $$ |$$ |      $$ |   $$  __$$< $$  __$$ |
             $$ |\$  /$$ |$$ |\$$\        $$ |  $$ |$$ |      $$ |   $$ |  $$ |$$ |  $$ |
             $$ | \_/ $$ |$$ | \$$\       \$$$$$$  |$$$$$$$$\ $$ |   $$ |  $$ |$$ |  $$ |
             \__|     \__|\__|  \__|       \______/ \________|\__|   \__|  \__|\__|  \__|
                                                                                         """)
    
def scan_wifi_networks():
   try:
       print("MK-ULTRA WI-FI Starting..")
       print("Scanning for Wi-Fi networks...")
       if sys.platform.startswith('win'):
           result = subprocess.check_output(['netsh', 'wlan', 'show', 'network'])
       elif sys.platform.startswith('linux') or sys.platform.startswith('darwin'):
           result = subprocess.check_output(['iwlist', 'scan'])
       else:
           print("Unsupported platform")
           return
 
 
       return result.decode('utf-8')
   except subprocess.CalledProcessError as e:
       print(f"Error: Unable to scan Wi-Fi networks. {e}")
       return None
   except Exception as e:
       print(f"Error: {e}")
       return None

def analyze_network_security(ssid, encryption_type):
   """Analyze the security of a Wi-Fi network."""
   try:
       print(f"Analyzing security for network: {ssid}")
       # Check if encryption type is weak or vulnerable
       if encryption_type.lower() in ['wep', 'wpa', 'tkip']:
           print("Warning: Weak encryption type detected.")
           print("Advice: Consider upgrading to WPA2 or WPA3 for stronger security.")
       else:
           print("Security: Strong")
           print("Advice: Keep your Wi-Fi password strong and secure, and regularly update your router firmware.")
       # You can add more checks for specific vulnerabilities here
   except Exception as e:
       print(f"Error: {e}")
      

def main():
   wifi_scan_result = scan_wifi_networks()
   if wifi_scan_result:
       print("\nWi-Fi scan result:")
       print(wifi_scan_result)
       networks = re.findall(r'SSID\s\d+\s:\s(.+)', wifi_scan_result)
       for ssid in networks:
           print(f"\nSSID: {ssid}")
           encryption_match = re.search(r'Encryption\s*:\s(.+)', wifi_scan_result)
           if encryption_match:
               encryption_type = encryption_match.group(1).strip()
               print(f"Encryption Type: {encryption_type}")
               analyze_network_security(ssid, encryption_type)
           else:
               print("Error: Unable to retrieve encryption type.")
   else:
       print("No Wi-Fi networks found or error occurred during scanning.")     


if __name__ == "__main__":
   main()
   
          